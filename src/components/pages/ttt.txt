import { useRoutes, useLocation } from "react-router-dom";
import { createContext, useState } from "react";
import { AnimatePresence } from "framer-motion";
import React from "react";
import HomeScreen from "./components/layout/HomeScreen/HomeScreen";
import BackToTopButton from "./components/common/BackToTopArrow/BackToTopButton";
import Online from "./components/common/Online/Online";
import AboutScreen from "./components/layout/AboutScreen/AboutScreen";
import Work from "./components/layout/MyWorksScreen/Work";
import ContactMe from "./components/layout/ContactMe/ContactMe";

type ThemeContextType = {
  isDarkmode: boolean;
  toggleTheme: () => void;
};

export const ThemeContext = createContext<ThemeContextType>({
  isDarkmode: false,
  toggleTheme: () => "",
});

const App: React.FunctionComponent = () => {
  const [isDarkmode, setIsDarkMode] = useState<boolean>(false);
  const toggleTheme = () => {
    setIsDarkMode(!isDarkmode);
  };

  const element = useRoutes([
    {
      path: "/",
      element: <HomeScreen />,
    },
    {
      path: "/about",
      element: <AboutScreen />,
    },
    {
      path: "/works",
      element: <Work />,
    },
    {
      path: "/contact",
      element: <ContactMe />,
    },
  ]);

  const location = useLocation();

  if (!element) return null;

  return (
    <ThemeContext.Provider value={{ isDarkmode, toggleTheme }}>
      <AnimatePresence mode="wait" initial={false}>
        {React.cloneElement(element, { key: location.pathname })}
      </AnimatePresence>
      <Online />
      <BackToTopButton />
    </ThemeContext.Provider>
  );
};

export default App;


import { useContext } from "react";
import {
  AntDesignIcon,
  BootstrapIcon,
  FigmaIcon,
  FirebaseIcon,
  GitIcon,
  HtmlIcon,
  JavascriptIcon,
  JqueryIcon,
  MaterialUiIcon,
  NetlifyIcon,
  ReactIcon,
  ReduxIcon,
  SassIcon,
  TailwindIcon,
  TypescriptIcon,
  VercelIcon,
  WebpackIcon,
} from "../../../assets/icons";
import SkillsCard from "./SkillsCard";
import "./Skills.scss"
import { ThemeContext } from "../../../App";

const Skills = () => {
  const programmingSkills = [
    {
      name: "Typescript",
      icon: <TypescriptIcon />,
    },
    {
      name: "Javascript",
      icon: <JavascriptIcon />,
    },
    {
      name: "Html",
      icon: <HtmlIcon />,
    },
    {
      name: "Css",
      icon: <AntDesignIcon />,
    },
  ];

  const libraryFrameworks = [
    {
      name: "React",
      icon: <ReactIcon />,
    },
    {
      name: "Vite",
      icon: <ReactIcon />,
    },
    {
      name: "Redux",
      icon: <ReduxIcon />,
    },
    {
      name: "PWA",
      icon: <MaterialUiIcon />,
    },
    {
      name: "Tailwind",
      icon: <TailwindIcon />,
    },
    {
      name: "Sass",
      icon: <SassIcon />,
    },
    {
      name: "Bootstrap",
      icon: <BootstrapIcon />,
    },

    {
      name: "Jquery",
      icon: <JqueryIcon />,
    },
  ];

  const toolsSkills = [
    {
      name: "Git",
      icon: <GitIcon />,
    },
    {
      name: "Firebase",
      icon: <FirebaseIcon />,
    },
    {
      name: "Figma",
      icon: <FigmaIcon />,
    },
    {
      name: "Netlify",
      icon: <NetlifyIcon />,
    },
    {
      name: "Vercel",
      icon: <VercelIcon />,
    },
    {
      name: "Cloudfare",
      icon: <WebpackIcon />,
    },
  ];

  const theme = useContext(ThemeContext);

  return (
    <div
      className={theme.isDarkmode ? "skillscontainerDark" : "skillscontainer"}
    >
      <div className="skillsWrapper">
        <div
          className={theme.isDarkmode ? "headingWrapperDark" : "headingWrapper"}
        >
          <p className="headName">Skills</p>
          <div className="headLine"></div>
        </div>
        <div className="flexSkills">
          <div className="progLangs">
            <h3 className="skill-head  text-[24px] premobile:text-[20px]">Programming Languages</h3>
            <div className="skillsWrap">
              {programmingSkills.map((skill) => (
                <SkillsCard
                  key={skill.name}
                  icon={skill.icon}
                  name={skill.name}
                />
              ))}
            </div>
          </div>
          <div className="libraries">
            <h3 className="skill-head  text-[24px] premobile:text-[20px]">Libraries & Frameworks</h3>
            <div className="skillsWrap">
              {libraryFrameworks.map((skill) => (
                <SkillsCard
                  key={skill.name}
                  name={skill.name}
                  icon={skill.icon}
                />
              ))}
            </div>
          </div>
          <div className="tools">
            <h3 className="skill-head text-[24px] premobile:text-[20px]">Tools & Platforms</h3>
            <div className="skillsWrap">
              {toolsSkills.map((skill) => (
                <SkillsCard
                  key={skill.name}
                  name={skill.name}
                  icon={skill.icon}
                />
              ))}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Skills;

import Socials from "../../../components/common/Socials/Socials";
import "./HeroPage.scss";
import { useCallback, useContext } from "react";
import Particles from "react-particles";
import { loadSlim } from "tsparticles-slim";
import { ThemeContext } from "../../../App";
import { RightArrowIcon } from "../../../assets/icons";

const HeroPage = () => {
  const particlesInit = useCallback(async (engine: any) => {
    await loadSlim(engine);
  }, []);
  const isMobile = window.innerWidth <= 820;
  const theme = useContext(ThemeContext);
  return (
    <div className="hero-container">
      <Particles
        id="tsparticles"
        init={particlesInit}
        options={{
          fpsLimit: 1000,
          fullScreen: { enable: false },
          interactivity: {
            events: {
              onClick: {
                enable: true,
                mode: "push",
              },
              onHover: {
                enable: true,
                mode: "repulse",
              },
              resize: true,
            },
            modes: {
              push: {
                quantity: 5,
              },
              repulse: {
                distance: 150,
                duration: 0.4,
              },
            },
          },
          particles: {
            color: {
              value: theme.isDarkmode ? "#606874" : "#a6c0ea",
            },
            links: {
              color: theme.isDarkmode ? "#606874" : "#a6c0ea",
              distance: 150,
              enable: true,
              opacity: 0.5,
              width: 1,
            },
            move: {
              direction: "none",
              enable: true,
              outModes: {
                default: "bounce",
              },
              random: false,
              speed: 5,
              straight: false,
            },
            number: {
              density: {
                enable: true,
                area: 1500,
              },
              value: isMobile ? 50 : 100,
            },
            opacity: {
              value: 0.3,
            },
            shape: {
              type: "circle",
            },
            size: {
              value: { min: 1, max: 4 },
            },
          },
          detectRetina: isMobile ? false : true,
        }}
      />
      <div className={theme.isDarkmode ? "heroContainerDark" : "heroContainer"}>
        <div className="heroWrapper">
          <div className="leftHero">
            <p className="hello">
              Hello <span className="wave">ðŸ‘‹</span>
            </p>
            <h2 className="name">I'm Valerian Adimike</h2>
            <p className="extraDetails">
              When it comes to Frontend, My skills are quite sublime. I love to
              create websites, With style that shines so bright! I'm based in
              Nigeria, With a mission that's grand. To make the web more
              accessible, To people near and far!
              <br />
              Mentored 80+ students in tech, empowering the next generation.
            </p>

            <div className="resumeContainer">
              <a
                className="resume"
                href="https://drive.google.com/file/d/1tVrJU4V-J9hpFp6d1BSH8lPNRJUJNHKe/view?usp=sharing"
                target="_blank"
                rel="noopener noreferrer"
              >
                <p className="viewCv flex items-center space-x-2">
                  <span>View my resumÃ©</span>
                  <span className="arrowIcon">
                    <RightArrowIcon />
                  </span>
                </p>
              </a>
            </div>
            <div className="socials">
              <Socials />
            </div>
          </div>

          <div className="rightHero h-[100%] flex items-center justify-center">
            {/* <img
              src="https://res.cloudinary.com/dbpcptmco/image/upload/v1709038997/Mood_Board__3_-removebg-preview_we6w8h.png"
              alt="Valerian-Pedro"
              draggable={false}
              className="h-[100%] w-[100%] object-cover"
            /> */}
          </div>
        </div>
      </div>
    </div>
  );
};

export default HeroPage;
